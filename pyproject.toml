[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["sweetviz"]

[project]
name = "sweetviz"
version = "2.3.1"
authors = [
  { name = "Francois Bertrand", email = "fb@fbdesignpro.com" },
]
description = "A pandas-based library to visualize and compare datasets."
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.8"

classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords=[
    "pandas",
    "data-science",
    "data-analysis",
    "python",
    "eda",
]
dependencies = [
    'pandas>=2.2.0',
    'numpy>=1.20.0',
    'matplotlib>=3.5.0',
    'tqdm>=4.60.0',
    'scipy>=1.8.0',
    'jinja2>=3.0.0',
    'importlib_resources>=5.0.0',
    'importlib_metadata;python_version<"3.8"',
    'scikit-learn>=1.0.0',  # For AI insights and anomaly detection
]

[project.optional-dependencies]
test = [
  "pytest >=6",
  "pytest-cov >=3",
]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
]
docs = [
  "sphinx>=4.0",
  "myst_parser>=0.13",
  "sphinx_book_theme>=0.1.0",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo",
]

[project.urls]
Homepage = "https://github.com/fbdesignpro/sweetviz"
"Bug Tracker" = "https://github.com/fbdesignpro/sweetviz/issues"
Discussions = "https://github.com/fbdesignpro/sweetviz/discussions"
Changelog = "https://github.com/fbdesignpro/sweetviz/releases"
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by '^/' will apply only to files and directories
# in the root of the project.
(
  ^/docs/         # exclude docs directory
  | __pycache__   # exclude __pycache__ directories
  | \.git         # exclude .git directory
)
'''

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "W", "I", "N", "UP", "YTT", "BLE", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = [
    "E501",   # Line length handled by black
    "COM812", # Trailing comma missing
    "ISC001", # Implicit string concatenation
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs",
]

line-length = 88
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
known-first-party = ["sweetviz"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "scipy.*", 
    "tqdm.*",
    "jinja2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
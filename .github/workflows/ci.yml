name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Lint with flake8
      run: |
        flake8 sweetviz --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 sweetviz --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check --diff sweetviz/
    
    - name: Import order check with isort
      run: |
        isort --check-only --diff sweetviz/
    
    - name: Type check with mypy
      run: |
        mypy sweetviz/ --ignore-missing-imports
      continue-on-error: true  # Allow type check failures for now
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=sweetviz --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  compatibility-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pandas-version: ["2.2.0", "2.3.0"]
        numpy-version: ["1.24.0", "2.0.0"]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install specific versions
      run: |
        python -m pip install --upgrade pip
        pip install pandas==${{ matrix.pandas-version }} numpy==${{ matrix.numpy-version }}
        pip install -e .[test]
    
    - name: Run compatibility tests
      run: |
        pytest tests/test_basic.py::TestCompatibility -v

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Security check with bandit
      run: |
        bandit -r sweetviz/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Check dependencies with safety
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: [test, compatibility-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/